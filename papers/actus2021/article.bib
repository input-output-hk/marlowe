%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/


%% Created for Simon  Thompson at 2021-03-24 18:02:33 +0000 


%% Saved with string encoding Western (Mac OS Roman) 



@inproceedings{utxo-vs-accounts,
	abstract = {We implement two versions of a simple but illustrative smart contract: one in Solidity on the Ethereum blockchain platform, and one in Plutus on the Cardano platform, with annotated code excerpts and with source code attached. We get a clearer view of the Cardano programming model in particular by introducing a novel mathematical abstraction which we call Idealised EUTxO. For each version of the contract, we trace how the architectures of the underlying platforms and their mathematics affects the natural programming styles and natural classes of errors. We prove some simple but novel results about alpha-conversion and observational equivalence for Cardano, and explain why Ethereum does not have them. We conclude with a wide-ranging and detailed discussion in the light of the examples, mathematical model, and mathematical results so far.},
	author = {Br{\"u}njes, Lars and Gabbay, Murdoch J.},
	booktitle = {Leveraging Applications of Formal Methods, Verification and Validation: Applications},
	date-added = {2021-02-04 20:50:45 +0000},
	date-modified = {2021-03-24 17:55:42 +0000},
	editor = {Margaria, Tiziana and others},
	isbn = {978-3-030-61467-6},
	publisher = {Springer},
	title = {{UTxO- vs Account-Based Smart Contract Blockchain Programming Paradigms}},
	year = {2020}}

@misc{cryptoeprint:2016:1156,
	author = {Pablo {Lamela Seijas} and Simon Thompson and Darryl McAdams},
	date-added = {2021-02-04 20:42:28 +0000},
	date-modified = {2021-02-04 20:44:13 +0000},
	howpublished = {Cryptology ePrint Archive, Report 2016/1156},
	note = {\url{https://eprint.iacr.org/2016/1156}},
	title = {Scripting smart contracts for distributed ledger technology},
	year = {2016}}

@inproceedings{marlowe-efficient,
	abstract = {SMT solvers can verify properties automatically and efficiently, and they offer increasing flexibility on the ways those properties can be described. But it is hard to predict how those ways of describing the properties affect the computational cost of verifying them.},
	author = {Lamela Seijas, Pablo and Smith, David and Thompson, Simon},
	booktitle = {Leveraging Applications of Formal Methods, Verification and Validation: Applications},
	date-added = {2021-02-04 11:22:59 +0000},
	date-modified = {2021-02-05 12:22:27 +0000},
	editor = {Margaria, Tiziana and Steffen, Bernhard},
	isbn = {978-3-030-61467-6},
	publisher = {Springer},
	title = {{Efficient Static Analysis of Marlowe Contracts}},
	year = {2020}}

@misc{loan,
	date-added = {2018-02-27 11:49:50 +0000},
	date-modified = {2021-02-03 17:54:37 +0000},
	howpublished = {\url{https://www.investopedia.com/terms/l/loan.asp}},
	key = {loan},
	note = {[last accessed 02-02-2020]},
	title = {{Loan definition}}}

@misc{actus,
	date-added = {2018-02-27 11:49:50 +0000},
	date-modified = {2021-02-03 17:55:23 +0000},
	howpublished = {\url{https://www.actusfrf.org/}},
	key = {ACTUS},
	note = {[last accessed 02-02-2020]},
	title = {{ACTUS Homepage}}}

@inproceedings{oracles,
	abstract = {Oracles support the access, validation, and transmission of data from external sources to blockchain systems. They are important components of blockchain-based architectures. However, there exists no guidance on how oracles could be used when designing blockchain-based applications. In this paper, based on the results of a systematic literature review, we propose a framework to explain blockchain oracles and their relationships to blockchain-based applications. More specifically, the blockchain oracle framework addresses the origin of data, oracle properties, encryption method, oracle data source, validation procedures, and the integration of oracles to blockchain-based applications. Potentially, this framework can guide developers when incorporating oracles to blockchain-based applications.},
	author = {Mammadzada, Kamran and others},
	booktitle = {Business Process Management: Blockchain and Robotic Process Automation Forum},
	date-modified = {2021-02-05 12:22:59 +0000},
	editor = {Asatiani, Aleksandre and others},
	isbn = {978-3-030-58779-6},
	publisher = {Springer},
	title = {{Blockchain Oracles: A Framework for Blockchain-Based Applications}},
	year = {2020}}

@misc{de-oracles,
	author = {Beniiche, Abdeljalil},
	date-modified = {2021-02-04 21:39:12 +0000},
	howpublished = {{\url{https://arxiv.org/abs/2004.07140}} [last accessed 04-02-2020]},
	title = {A Study of Blockchain Oracles},
	year = {2020}}

@inproceedings{smt,
	abstract = {Computational capacity of modern hardware and algorithmic advances have allowed SAT solving to become a tractable technique to rely on for the decision of properties in industrial software. In this article, we present three practical applications of SAT to software security in static vulnerability checking, exploit generation, and the study of copy protections. These areas are some of the most active in terms of both theoretical research and practical solutions. Investigating the successes and failures of approaches to these problems is instructive in providing guidance for future work on the problems themselves as well as other SMT-based systems.},
	address = {USA},
	author = {Vanegue, Julien and Heelan, Sean and Rolles, Rolf},
	booktitle = {Proceedings of the 6th USENIX Conference on Offensive Technologies},
	date-modified = {2021-02-03 18:08:50 +0000},
	location = {Bellevue, WA},
	numpages = {1},
	pages = {9},
	publisher = {USENIX Association},
	series = {WOOT'12},
	title = {{SMT Solvers for Software Security}},
	year = {2012}}

@inproceedings{marlowe,
	abstract = {Blockchains allow the specification of contracts in the form of programs that guarantee their fulfilment. Nevertheless, errors in those programs can cause important, and often irretrievable, monetary loss. General-purpose languages provide a platform on which contracts can be built, but by their very generality they have the potential to exhibit behaviours of an unpredictable kind, and are also not easy to read or comprehend for general users.},
	author = {{Lamela Seijas}, Pablo and Thompson, Simon},
	booktitle = {Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice},
	date-modified = {2021-02-05 12:22:13 +0000},
	editor = {Margaria, Tiziana and Steffen, Bernhard},
	isbn = {978-3-030-03427-6},
	publisher = {Springer},
	title = {{Marlowe: Financial Contracts on Blockchain}},
	year = {2018}}

@inproceedings{qc,
	abstract = {Quick Check is a tool which aids the Haskell programmer in formulating and testing properties of programs. Properties are described as Haskell functions, and can be automatically tested on random input, but it is also possible to define custom test data generators. We present a number of case studies, in which the tool was successfully used, and also point out some pitfalls to avoid. Random testing is especially suitable for functional programs because properties can be stated at a fine grain. When a function is built from separately tested components, then random testing suffices to obtain good coverage of the definition under test.},
	address = {New York},
	author = {Claessen, Koen and Hughes, John},
	booktitle = {ICFP 2000},
	date-modified = {2021-03-24 17:57:19 +0000},
	doi = {10.1145/351240.351266},
	publisher = {ACM},
	title = {{QuickCheck: A Lightweight Tool for Random Testing of Haskell Programs}},
	year = {2000},
	Bdsk-Url-1 = {https://doi.org/10.1145/351240.351266}}

@misc{flash-loan,
	date-added = {2018-02-27 11:49:50 +0000},
	date-modified = {2021-02-03 18:08:05 +0000},
	howpublished = {\url{https://www.coindesk.com/harvest-finance-24m-attack-triggers-570m-bank-run-in-latest-defi-exploit}},
	key = {flash},
	note = {[last accessed 02-02-2020]},
	title = {\mbox{Flash-loan attack definition}}}

@misc{isda-cdm,
	date-added = {2018-11-22 11:49:50 +0000},
	date-modified = {2018-11-22 11:49:50 +0000},
	howpublished = {\url{https://www.isda.org/2019/10/14/isda-common-domain-model/}},
	key = {flash},
	note = {[last accessed 02-02-2020]},
	title = {\mbox{ISDA Common Domain Model}}}
